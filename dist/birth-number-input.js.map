{"version":3,"file":"birth-number-input.js","sources":["../src/assets/index.js","../src/assets/birth-number-input.js"],"sourcesContent":["export default (Nette) => {\n    Nette.validators.NepadaBirthNumberInputValidator_validateBirthNumber = (element, argument, value) => {\n        if (typeof value !== 'string') {\n            return false;\n        }\n\n        const match = value.match(/^\\s*(\\d\\d)(\\d\\d)(\\d\\d)\\s*\\/?\\s*(\\d\\d\\d)(\\d?)\\s*$/u);\n        if (!match) {\n            return false;\n        }\n\n        const yearPart = match[1];\n        const monthPart = match[2];\n        const dayPart = match[3];\n        const extension = match[4];\n        const checksum = match[5];\n\n        let year = parseInt(yearPart, 10);\n        let month = parseInt(monthPart, 10);\n        let day = parseInt(dayPart, 10);\n\n        year += 1900;\n        if (year < 1954) {\n            if (checksum !== '') {\n                year += 100;\n            }\n        } else if (checksum === '') {\n            return false;\n        }\n\n        if (checksum !== '') {\n            const mod = (parseInt(yearPart + monthPart + dayPart + extension, 10) % 11) % 10;\n            if (mod !== parseInt(checksum, 10)) {\n                return false;\n            }\n        }\n\n        if (month > 50) {\n            month -= 50;\n        }\n        if (month > 20 && year > 2003) {\n            month -= 20;\n        }\n\n        const date = new Date(year, month - 1, day);\n        return date.getFullYear() === year && date.getMonth() === month - 1 && date.getDate() === day;\n    };\n};\n","import Nette from 'nette-forms';\nimport bindToNetteForms from './index';\n\nbindToNetteForms(Nette);\n"],"names":["Nette","validators","NepadaBirthNumberInputValidator_validateBirthNumber","element","argument","value","match","yearPart","monthPart","dayPart","extension","checksum","year","parseInt","month","day","mod","date","Date","getFullYear","getMonth","getDate","bindToNetteForms"],"mappings":";;;;;;AAAA,2BAAe,CAAA,UAACA,KAAK,EAAK;MACtBA,KAAK,CAACC,UAAU,CAACC,mDAAmD,GAAG,UAACC,OAAO,EAAEC,QAAQ,EAAEC,KAAK,EAAK;IACjG,IAAA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC3B,MAAA,OAAO,KAAK,CAAA;IAChB,KAAA;IAEA,IAAA,IAAMC,KAAK,GAAGD,KAAK,CAACC,KAAK,CAAC,oVAAmD,CAAC,CAAA;QAC9E,IAAI,CAACA,KAAK,EAAE;IACR,MAAA,OAAO,KAAK,CAAA;IAChB,KAAA;IAEA,IAAA,IAAMC,QAAQ,GAAGD,KAAK,CAAC,CAAC,CAAC,CAAA;IACzB,IAAA,IAAME,SAAS,GAAGF,KAAK,CAAC,CAAC,CAAC,CAAA;IAC1B,IAAA,IAAMG,OAAO,GAAGH,KAAK,CAAC,CAAC,CAAC,CAAA;IACxB,IAAA,IAAMI,SAAS,GAAGJ,KAAK,CAAC,CAAC,CAAC,CAAA;IAC1B,IAAA,IAAMK,QAAQ,GAAGL,KAAK,CAAC,CAAC,CAAC,CAAA;IAEzB,IAAA,IAAIM,IAAI,GAAGC,QAAQ,CAACN,QAAQ,EAAE,EAAE,CAAC,CAAA;IACjC,IAAA,IAAIO,KAAK,GAAGD,QAAQ,CAACL,SAAS,EAAE,EAAE,CAAC,CAAA;IACnC,IAAA,IAAIO,GAAG,GAAGF,QAAQ,CAACJ,OAAO,EAAE,EAAE,CAAC,CAAA;IAE/BG,IAAAA,IAAI,IAAI,IAAI,CAAA;QACZ,IAAIA,IAAI,GAAG,IAAI,EAAE;UACb,IAAID,QAAQ,KAAK,EAAE,EAAE;IACjBC,QAAAA,IAAI,IAAI,GAAG,CAAA;IACf,OAAA;IACJ,KAAC,MAAM,IAAID,QAAQ,KAAK,EAAE,EAAE;IACxB,MAAA,OAAO,KAAK,CAAA;IAChB,KAAA;QAEA,IAAIA,QAAQ,KAAK,EAAE,EAAE;IACjB,MAAA,IAAMK,GAAG,GAAIH,QAAQ,CAACN,QAAQ,GAAGC,SAAS,GAAGC,OAAO,GAAGC,SAAS,EAAE,EAAE,CAAC,GAAG,EAAE,GAAI,EAAE,CAAA;UAChF,IAAIM,GAAG,KAAKH,QAAQ,CAACF,QAAQ,EAAE,EAAE,CAAC,EAAE;IAChC,QAAA,OAAO,KAAK,CAAA;IAChB,OAAA;IACJ,KAAA;QAEA,IAAIG,KAAK,GAAG,EAAE,EAAE;IACZA,MAAAA,KAAK,IAAI,EAAE,CAAA;IACf,KAAA;IACA,IAAA,IAAIA,KAAK,GAAG,EAAE,IAAIF,IAAI,GAAG,IAAI,EAAE;IAC3BE,MAAAA,KAAK,IAAI,EAAE,CAAA;IACf,KAAA;IAEA,IAAA,IAAMG,IAAI,GAAG,IAAIC,IAAI,CAACN,IAAI,EAAEE,KAAK,GAAG,CAAC,EAAEC,GAAG,CAAC,CAAA;QAC3C,OAAOE,IAAI,CAACE,WAAW,EAAE,KAAKP,IAAI,IAAIK,IAAI,CAACG,QAAQ,EAAE,KAAKN,KAAK,GAAG,CAAC,IAAIG,IAAI,CAACI,OAAO,EAAE,KAAKN,GAAG,CAAA;OAChG,CAAA;IACL,CAAC;;IC5CDO,gBAAgB,CAACtB,KAAK,CAAC;;;;;;"}