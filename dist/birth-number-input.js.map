{"version":3,"file":"birth-number-input.js","sources":["../src/assets/index.js","../src/assets/birth-number-input.js"],"sourcesContent":["export default (Nette) => {\n    Nette.validators.NepadaBirthNumberInputValidator_validateBirthNumber = (element, argument, value) => {\n        if (typeof value !== 'string') {\n            return false;\n        }\n\n        const match = value.match(/^\\s*(\\d\\d)(\\d\\d)(\\d\\d)\\s*\\/?\\s*(\\d\\d\\d)(\\d?)\\s*$/u);\n        if (!match) {\n            return false;\n        }\n\n        const yearPart = match[1];\n        const monthPart = match[2];\n        const dayPart = match[3];\n        const extension = match[4];\n        const checksum = match[5];\n\n        let year = parseInt(yearPart, 10);\n        let month = parseInt(monthPart, 10);\n        let day = parseInt(dayPart, 10);\n\n        year += 1900;\n        if (year < 1954) {\n            if (checksum !== '') {\n                year += 100;\n            }\n        } else if (checksum === '') {\n            return false;\n        }\n\n        if (checksum !== '') {\n            const mod = (parseInt(yearPart + monthPart + dayPart + extension, 10) % 11) % 10;\n            if (mod !== parseInt(checksum, 10)) {\n                return false;\n            }\n        }\n\n        if (month > 50) {\n            month -= 50;\n        }\n        if (month > 20 && year > 2003) {\n            month -= 20;\n        }\n\n        const date = new Date(year, month - 1, day);\n        return date.getFullYear() === year && date.getMonth() === month - 1 && date.getDate() === day;\n    };\n};\n","import Nette from 'nette-forms';\nimport bindToNetteForms from './index';\n\nbindToNetteForms(Nette);\n"],"names":["Nette","validators","NepadaBirthNumberInputValidator_validateBirthNumber","element","argument","value","match","yearPart","monthPart","dayPart","extension","checksum","year","parseInt","month","day","mod","date","Date","getFullYear","getMonth","getDate","bindToNetteForms"],"mappings":";;;;;;;;AAAA,4BAAe,UAACA,KAAD,EAAW;IACtBA,EAAAA,KAAK,CAACC,UAAN,CAAiBC,mDAAjB,GAAuE,UAACC,OAAD,EAAUC,QAAV,EAAoBC,KAApB,EAA8B;IACjG,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;IAC3B,aAAO,KAAP;IACH;;IAED,QAAMC,KAAK,GAAGD,KAAK,CAACC,KAAN,CAAY,oVAAZ,CAAd;;IACA,QAAI,CAACA,KAAL,EAAY;IACR,aAAO,KAAP;IACH;;IAED,QAAMC,QAAQ,GAAGD,KAAK,CAAC,CAAD,CAAtB;IACA,QAAME,SAAS,GAAGF,KAAK,CAAC,CAAD,CAAvB;IACA,QAAMG,OAAO,GAAGH,KAAK,CAAC,CAAD,CAArB;IACA,QAAMI,SAAS,GAAGJ,KAAK,CAAC,CAAD,CAAvB;IACA,QAAMK,QAAQ,GAAGL,KAAK,CAAC,CAAD,CAAtB;IAEA,QAAIM,IAAI,GAAGC,QAAQ,CAACN,QAAD,EAAW,EAAX,CAAnB;IACA,QAAIO,KAAK,GAAGD,QAAQ,CAACL,SAAD,EAAY,EAAZ,CAApB;IACA,QAAIO,GAAG,GAAGF,QAAQ,CAACJ,OAAD,EAAU,EAAV,CAAlB;IAEAG,IAAAA,IAAI,IAAI,IAAR;;IACA,QAAIA,IAAI,GAAG,IAAX,EAAiB;IACb,UAAID,QAAQ,KAAK,EAAjB,EAAqB;IACjBC,QAAAA,IAAI,IAAI,GAAR;IACH;IACJ,KAJD,MAIO,IAAID,QAAQ,KAAK,EAAjB,EAAqB;IACxB,aAAO,KAAP;IACH;;IAED,QAAIA,QAAQ,KAAK,EAAjB,EAAqB;IACjB,UAAMK,GAAG,GAAIH,QAAQ,CAACN,QAAQ,GAAGC,SAAX,GAAuBC,OAAvB,GAAiCC,SAAlC,EAA6C,EAA7C,CAAR,GAA2D,EAA5D,GAAkE,EAA9E;;IACA,UAAIM,GAAG,KAAKH,QAAQ,CAACF,QAAD,EAAW,EAAX,CAApB,EAAoC;IAChC,eAAO,KAAP;IACH;IACJ;;IAED,QAAIG,KAAK,GAAG,EAAZ,EAAgB;IACZA,MAAAA,KAAK,IAAI,EAAT;IACH;;IACD,QAAIA,KAAK,GAAG,EAAR,IAAcF,IAAI,GAAG,IAAzB,EAA+B;IAC3BE,MAAAA,KAAK,IAAI,EAAT;IACH;;IAED,QAAMG,IAAI,GAAG,IAAIC,IAAJ,CAASN,IAAT,EAAeE,KAAK,GAAG,CAAvB,EAA0BC,GAA1B,CAAb;IACA,WAAOE,IAAI,CAACE,WAAL,OAAuBP,IAAvB,IAA+BK,IAAI,CAACG,QAAL,OAAoBN,KAAK,GAAG,CAA3D,IAAgEG,IAAI,CAACI,OAAL,OAAmBN,GAA1F;IACH,GA7CD;IA8CH,CA/CD;;ICGAO,gBAAgB,CAACtB,KAAD,CAAhB;;;;"}